@model IEnumerable<jritchieFinancialPortal.Models.CodeFirst.Transaction>

@{
    ViewBag.Title = "Transactions Index";
}

<h2>Transactions Index</h2>
<h4>@ViewBag.CurrentUserHouseholdName</h4>


<p>
    @Html.ActionLink("Add new Transaction", "Create")
</p>

<table class="table">
    <tr>
        <th>
            Account Name
            @*@Html.DisplayNameFor(model => model.Account.Name)*@
        </th>
        <th>
            Date Posted
            @*@Html.DisplayNameFor(model => model.DatePosted)*@
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            Category
            @*@Html.DisplayNameFor(model => model.Category.Name)*@
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Amount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Reconciled)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Void)
        </th>
        <th></th>
        @*<th>
                Posted by
                @Html.DisplayNameFor(model => model.PostedBy.FirstName)
            </th>*@
        @*<th>
                Reconciled by
                @Html.DisplayNameFor(model => model.ReconciledBy.FirstName)
            </th>*@
        @*<th>
                Date Reconciled
                @Html.DisplayNameFor(model => model.DateReconciled)
            </th>*@
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Account.Name)
            </td>
            <td>
                @Html.ToUserTime(item.DatePosted, ViewBag.UserTimeZone as string, "MM/dd/yyyy")
                @*@Html.DisplayFor(modelItem => item.DatePosted)*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td style="text-align:right; padding-right:25px">
                @if (item.Amount < 0)
                {
                    <span style="color:orangered">@Html.DisplayFor(modelItem => item.Amount)</span>
                }
                else
                {
                    <span style="color:forestgreen">@Html.DisplayFor(modelItem => item.Amount)</span>
                }
            </td>

            <td style="text-align:center">
                <!-- *** Reconciled checkbox. *** -->
                @if (item.Reconciled)
                {
                    <div class="checkbox checkbox-success checkbox-circle">
                        <input id="checkbox-Reconciled" type="checkbox" name="Reconciled" value="true" checked disabled>
                        <label for="checkbox-Reconciled">
                            &nbsp;
                        </label>
                    </div>
                }
                @if (!item.Reconciled)
                {
                    <div class="checkbox checkbox-success checkbox-circle">
                        <input id="checkbox-Reconciled" type="checkbox" name="Reconciled" value="true" disabled>
                        <label for="checkbox-Reconciled">
                            &nbsp;
                        </label>
                    </div>
                }
            </td>

            <td style="text-align:center">
                <!-- *** Void checkbox. *** -->
                @if (item.Void)
                {
                    <div class="checkbox checkbox-danger checkbox-circle">
                        <input id="checkbox-Void" type="checkbox" name="Void" value="true" checked disabled>
                        <label for="checkbox-Void">
                            &nbsp;
                        </label>
                    </div>
                }
                @if (!item.Void)
                {
                    <div class="checkbox checkbox-danger checkbox-circle">
                        <input id="checkbox-Void" type="checkbox" name="Void" value="true" disabled>
                        <label for="checkbox-Void">
                            &nbsp;
                        </label>
                    </div>
                }
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id })
                @*@Html.ActionLink("Void", "Delete", new { id=item.Id })*@
            </td>
        </tr>
    }

</table>


@*<td>
        @Html.DisplayFor(modelItem => item.PostedBy.FirstName)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.ReconciledBy.FirstName)
    </td>
    <td>
        @if(item.DateReconciled != null)
        {
            @Html.ToUserTime(item.DateReconciled.Value, ViewBag.UserTimeZone as string, "MM/dd/yyyy")
            @Html.DisplayFor(modelItem => item.DateReconciled)
        }
        else
        {
            <span>-</span>
        }
    </td>*@
