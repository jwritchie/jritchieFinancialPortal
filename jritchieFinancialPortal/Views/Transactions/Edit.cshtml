@model jritchieFinancialPortal.Models.CodeFirst.Transaction

@{
    ViewBag.Title = "Edit Transaction";
}

<h2>Edit Transaction</h2>
<h4>@ViewBag.CurrentUserHouseholdName</h4>


@using (Html.BeginForm("Edit","Transactions", new { PriorAccountId = ViewBag.TransactionsAccountId }, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @*<h4>Transaction</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.PostedById)
        @Html.HiddenFor(model => model.DatePosted)
        @Html.HiddenFor(model => model.DateReconciled)
        @Html.HiddenFor(model => model.ReconciledById)

        <div class="form-group">
            @Html.LabelFor(model => model.AccountId, "Account Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.DropDownList("AccountId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-9">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />

        <!-- *** Radio Button test. *** -->
        @*<label class="radio-inline">
                @Html.RadioButtonFor(model => model.Reconciled, true) Reconciled
            </label>
            <label class="radio-inline">
                @Html.RadioButtonFor(model => model.Reconciled, false) UnReconciled
            </label>*@
        <!-- ****** -->

        <!-- *** Reconciled checkbox. *** -->
        @if (Model.Reconciled)
        {
            @*<input type="checkbox" class="checkbox checkbox-success checkbox-circle" id="Reconciled" name="Reconciled" value="true" checked />*@
            <div class="form-group">
                @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox checkbox-success checkbox-circle">
                        <input id="checkbox-Reconciled" type="checkbox" name="Reconciled" value="true" checked>
                        <label for="checkbox-Reconciled">
                            &nbsp;
                        </label>
                    </div>
                </div>
            </div>
        }
        @if (!Model.Reconciled)
        {
            @*<input type="checkbox" class="checkbox checkbox-success checkbox-circle" id="Reconciled" name="Reconciled" value="true" />*@
            <div class="form-group">
                @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox checkbox-success checkbox-circle">
                        <input id="checkbox-Reconciled" type="checkbox" name="Reconciled" value="true">
                        <label for="checkbox-Reconciled">
                            &nbsp;
                        </label>
                    </div>
                </div>
            </div>
        }
        <!-- ****** -->

        <!-- *** Void checkbox. *** -->
        @if (Model.Void)
        {
            @*<input type="checkbox" class="checkbox checkbox-success checkbox-circle" id="Reconciled" name="Reconciled" value="true" checked />*@
            <div class="form-group">
                @Html.LabelFor(model => model.Void, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox checkbox-danger checkbox-circle">
                        <input id="checkbox-Void" type="checkbox" name="Void" value="true" checked>
                        <label for="checkbox-Void">
                            &nbsp;
                        </label>
                    </div>
                </div>
            </div>
        }
        @if (!Model.Void)
        {
            @*<input type="checkbox" class="checkbox checkbox-success checkbox-circle" id="Reconciled" name="Reconciled" value="true" />*@
            <div class="form-group">
                @Html.LabelFor(model => model.Void, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox checkbox-danger checkbox-circle">
                        <input id="checkbox-Void" type="checkbox" name="Void" value="true">
                        <label for="checkbox-Void">
                            &nbsp;
                        </label>
                    </div>
                </div>
            </div>
        }
        <!-- ****** -->

        <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Transactions List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


@*<div class="form-group">
        @Html.LabelFor(model => model.DatePosted, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DatePosted, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DatePosted, "", new { @class = "text-danger" })
        </div>
    </div>*@
@*<div class="form-group">
        @Html.LabelFor(model => model.PostedById, "PostedById", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("PostedById", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PostedById, "", new { @class = "text-danger" })
        </div>
    </div>*@
@*<div class="form-group">
        @Html.LabelFor(model => model.DateReconciled, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateReconciled, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateReconciled, "", new { @class = "text-danger" })
        </div>
    </div>*@
@*<div class="form-group">
        @Html.LabelFor(model => model.ReconciledById, "ReconciledById", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ReconciledById", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ReconciledById, "", new { @class = "text-danger" })
        </div>
    </div>*@
@*<div class="form-group">
        @Html.LabelFor(model => model.Reconciled, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-1">
            @{
                if (Model.Reconciled)
                {
                    <div style="background-color:lawngreen; text-align:center">
                        @Html.CheckBoxFor(model => model.Reconciled, new { style = "height:20px; width: 20px; transform: scale(1.4); margin-top:8px" })
                    </div>
                }
                else
                {
                    <div style="text-align:center">
                        @Html.CheckBoxFor(model => model.Reconciled, new { style = "height:20px; width: 20px; transform: scale(1.4); margin-top:8px" })
                    </div>
                }
            }
        </div>
    </div>*@
@*<div class=" form-group">
        @Html.LabelFor(model => model.Void, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-1">
            @{
                if (Model.Void)
                {
                    <div style="background-color:red; text-align:center">
                        @Html.CheckBoxFor(model => model.Void, new { style = "height:20px; width: 20px; transform: scale(1.4); margin-top:8px" })
                    </div>
                }
                else
                {
                    <div style="text-align:center">
                        @Html.CheckBoxFor(model => model.Void, new { style = "height:20px; width: 20px; transform: scale(1.4); margin-top:8px" })
                    </div>
                }
            }
        </div>
    </div>*@
